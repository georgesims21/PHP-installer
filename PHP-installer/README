NAME
PHP-installer for centos8

SYNOPSIS
./PHP-installer.sh [PHP VERSION] [MAX THREADS]

DESCRIPTION
Given a PHP VERSION and a MAX THREADS (most threads used at one time during the 'make' phases of the builds),
PHP-installer will download and install this version from source (Github). The script also uses this
version's own PECL installer to install 5 extensions: pecl_http, memcache, oauth, seaslog and swoole. Finally it will
install Xdebug from source and install it only for this PHP version.

All installation and binary files for this PHP version and its extensions are located inside the /opt/php-<version> directory.
The PEAR cache/install/temp files can be found at /tmp/pear-php-<ver>/cache, /tmp/pear-php-<ver>/install and /tmp/pear-php-<ver>/temp
respectively.

Installing in this way allows users to easily find any files related to a particular PHP version, make code changes and
recompile the PHP version in a single place and also pull files from Github. Separating installs from /usr/local/bin and /usr/bin
to /opt also allows users to know which software needs to be updated manually rather than through the system's package manager.
This method also installs extensions solely for that version without interfering with
the system installed php, or any other PHP versions previously downloaded with this script.

USAGE
Once completed, the requested php version can be executed by calling:
$ php-<ver>
from the command line.

DISADVANTAGES
The pitfall of doing an install in this way is that if the /opt/php-<version> directory is deleted, a dangling symlink will be left in the /usr/bin. Updating
the user's $PATH variable to include this wasn't considered, as all binaries (such as pear, pecl, phpcli, etc) would need to be renamed and this risks
affecting the already-installed PHP version, thus a single symlink to the binary in /usr/bin is used instead (renamed
to 'php-<ver>', thus 'php' continues to be the system-wide php executable).

Any updates/installs will need to use that PHP's pecl rather than the system-wide pecl. For example:
$ /opt/php-8.0/bin/pecl install pecl_http
must be used to install pecl_http on the php-8.0 version.

ZTS or debug PHP versions are not handled here, this can be changed by downloading the tarball directly from https://www.php.net/downloads. This
also means that no GPG or signatures were checked leading to a potential security risk.

SUPPORTED PHP VERSIONS
8.0, 7.3 and 7.4 can be used with this script, future work can see more added, but these are the main stable versions of PHP
at the time of writing.

DEPENDENCIES
"Development tools"
mysql-devel
php-devel
libcurl-devel
rhash-devel
autoconf
libtool
bison
libxml2-devel
bzip2-devel
libcurl-devel
libpng-devel
libicu-devel
gcc-c++
libmcrypt-devel
libwebp-devel
libjpeg-devel
openssl-devel
libxslt-devel
re2c

PROBLEMS
Unfortunately this script cannot be run concurrently. The PHP install is OK, but once each PHP install's PECL begins
to download extensions, they mix up their own PEAR directories with the others. This is a difficult bug to solve, as all
individual PEAR configuration settings were modified to match specific directories (see lines 67-69) meaning
no PHP's PEAR share any directories, thus no mix ups should happen.
E.g. if 7.3 and 8.0 were being downloaded concurrently, php-7.3's pear install files are located at
/tmp/pear-php-7.3/install, and php-8.0's at /tmp/pear-php-8.0/install. When running together
one, say 7.3, may access /tmp/pear-php-8.0/install arbitrarily, leading to an installation error as this is the wrong directory.
